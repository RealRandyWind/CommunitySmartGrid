#!/bin/bash

if [ -z $1 ]; then
	echo "No className given."
	exit 1
fi

className=FM$(echo ${1}| sed 's/\(.\)/\U\1/')
fileName=${className}
productInterfaceName=${2}
location=${3+"${3}/"}


cat << _EOF_ >> ${location}${fileName}.java
import java.util.Vector;
import java.util.List;

public class ${className} {
	public enum E${productInterfaceName}Type {
		DEFAULT
	}

	private static ${className} a_oInstance = null;
	private boolean a_bIsSetUp = false;
	private boolean a_bIsShutDown = true;
	private Vector<${productInterfaceName}> a_lProducts = null;

	private ${className}() {
		a_bIsSetUp = false;
		a_bIsShutDown = true;
		a_lProducts = new Vector<${productInterfaceName}>();
	}

	public static ${className} GetInstance() {
		if(a_oInstance != null) { return a_oInstance; }
		a_oInstance = new ${className}();
		return a_oInstance;
	}

	public void SetUp() {
		if(a_bIsSetUp) {
			return; 
		}
		a_bIsShutDown = false;

		// TODO ${className} SetUp

		a_bIsSetUp = true;
	}

	public void ShutDown() {
		if(a_bIsShutDown) {
			return; 
		}
		a_bIsSetUp = false;

		// TODO ${className} ShutDown

		a_bIsShutDown = true;
	}

	private ${productInterfaceName} Fx_BuiltDefaultProduct() {
		return null;
	}

	private void Fx_RemoveProduct(int iProduct) {
		
	}
	
	public ${productInterfaceName} BuiltProduct(E${productInterfaceName}Type eType) {
		${productInterfaceName} oProduct = null;

		switch (eType) {
			case DEFAULT: oProduct = Fx_BuiltDefaultProduct(); break;
			default: break;
		}

		a_lProducts.add(oProduct);
		return oProduct;
	}

	public ${productInterfaceName} GetProduct(int iProduct) {
		if(iProduct < 0 || iProduct >= a_lProducts.size()) { return null; }
	
		return a_lProducts.get(iProduct);
	}

	public List<${productInterfaceName}> GetProducts(Iterable<Integer> liProducts) {
		Vector<${productInterfaceName}> loProducts = new Vector<${productInterfaceName}>();
		for(int iProduct : liProducts) {
			${productInterfaceName} oProduct = GetProduct(iProduct);
			if(oProduct == null) { continue; }
			loProducts.add(oProduct);
		}

		return loProducts;
	}

	public void DestroyProduct(int iProduct) {
		${productInterfaceName} oProduct = GetProduct(iProduct);
		if(oProduct == null) { return; }
		a_lProducts.set(iProduct, null);
	}

	public void DestroyProducts(Iterable<Integer> liProducts) {
		for(int iProduct : liProducts) { DestroyProduct(iProduct); }
	}
}
_EOF_
